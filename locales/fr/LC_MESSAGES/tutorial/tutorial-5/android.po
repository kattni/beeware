#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-19 19:48-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Translate Toolkit 3.15.6\n"

#: docs/tutorial/tutorial-5/android.md:1
msgid "Tutorial 5 - Taking it mobile: Android"
msgstr ""

#: docs/tutorial/tutorial-5/android.md:6
msgid ""
"The process of deploying an application to Android is very similar to the "
"process for deploying as a desktop application. Briefcase handles installing"
" dependencies for Android, including the Android SDK, the Android emulator, "
"and a Java compiler."
msgstr ""

#: docs/tutorial/tutorial-5/android.md:11
msgid "Create an Android app and compile it"
msgstr ""

#: docs/tutorial/tutorial-5/android.md:13
msgid ""
"First, run the `create` command. This downloads an Android app template and "
"adds your Python code to it."
msgstr ""

#: docs/tutorial/tutorial-5/android.md:184
msgid "::: {.admonition} Gradle may look stuck"
msgstr ""

#: docs/tutorial/tutorial-5/android.md:196
msgid "Run the app on a virtual device"
msgstr ""

#: docs/tutorial/tutorial-5/android.md:255
msgid ""
"Briefcase `run` will automatically boot the virtual device. When the device "
"is booting, you will see the Android logo:"
msgstr ""

#: docs/tutorial/tutorial-5/android.md:264
msgid ""
"Once the device has finished booting, Briefcase will install your app on the"
" device. You will briefly see a launcher screen:"
msgstr ""

#: docs/tutorial/tutorial-5/android.md:305
msgid ""
"If you fail to see your app launching, you may need to check your terminal "
"where you ran `briefcase run` and look for any error messages."
msgstr ""

#: docs/tutorial/tutorial-5/android.md:319
msgid "Run the app on a physical device"
msgstr ""

#: docs/tutorial/tutorial-5/android.md:321
msgid ""
"If you have a physical Android phone or tablet, you can connect it to your "
"computer with a USB cable, and then use the Briefcase to target your "
"physical device."
msgstr ""

#: docs/tutorial/tutorial-5/android.md:325
msgid ""
"Android requires that you prepare your device before it can be used for "
"development. You will need to make 2 changes to the options on your device:"
msgstr ""

#: docs/tutorial/tutorial-5/android.md:329
msgid "Enable developer options"
msgstr ""

#: docs/tutorial/tutorial-5/android.md:329
msgid "Enable USB debugging"
msgstr ""

#: docs/tutorial/tutorial-5/android.md:336
msgid ""
"Once these steps have been completed, your device should appear in the list "
"of available devices when you run `briefcase run android`."
msgstr ""

msgid ""
"Now, we're going to take our application, and deploy it as an Android "
"application."
msgstr ""

msgid ""
"When you run `briefcase create android` for the first time, Briefcase "
"downloads a Java JDK, and the Android SDK. File sizes and download times can"
" be considerable; this may take a while (10 minutes or longer, depending on "
"the speed of your Internet connection). When the download has completed, you"
" will be prompted to accept Google's Android SDK license. There's a number "
"of licenses you'll need to agree too - keep entering `y` at the prompt to "
"review and accept each of the necessary the license agreements."
msgstr ""

msgid ""
"Once this completes, we'll have a `build\\helloworld\\android\\gradle` "
"directory in our project, which will contain an Android project with a "
"Gradle build configuration. This project will contain your application code,"
" and a support package containing the Python interpreter."
msgstr ""

msgid ""
"We can then use Briefcase's `build` command to compile this into an Android "
"APK app file."
msgstr ""

msgid ""
"During the `briefcase build android` step, Gradle (the Android platform "
"build tool) will print `CONFIGURING: 100%`, and appear to be doing nothing. "
"Don't worry, it's not stuck - it's downloading more Android SDK components. "
"Depending on your Internet connection speed, this may take another 10 "
"minutes (or longer). This lag should only happen the very first time you run"
" `build`; the tools are cached, and on your next build, the cached versions "
"will be used. :::"
msgstr ""

msgid ""
"We're now ready to run our application. You can use Briefcase's `run` "
"command to run the app on an Android device. Let's start by running on an "
"Android emulator."
msgstr ""

msgid ""
"To run your application, run `briefcase run android`. When you do this, "
"you'll be prompted with a list of devices that you could run the app on. The"
" last item will always be an option to create a new Android emulator."
msgstr ""

msgid ""
"We can now choose our desired device. Select the \"Create a new Android "
"emulator\" option, and accept the default choice for the device name "
"(`beePhone`)."
msgstr ""

msgid ""
"The app will then start. You'll see a splash screen while the app starts up:"
msgstr ""

msgid "::: {.admonition} The emulator didn't start!"
msgstr ""

msgid ""
"The Android emulator is a complex piece of software that relies on a number "
"of hardware and operating system features - features that may not be "
"available or enabled on older machines. If you experience any difficulties "
"starting the Android emulator, consult the [Requirements and "
"recommendations](https://developer.android.com/studio/run/emulator#requirements)"
" section of the Android developer documentation. :::"
msgstr ""

msgid ""
"The first time the app starts, it needs to unpack itself onto the device. "
"This may take a few seconds. Once it's unpacked, you'll see the Android "
"version of our desktop app:"
msgstr ""

msgid ""
"While the app is running, you'll see a lot of messages being streamed in the"
" console. This is a stream of the application's logs from the emulator. "
"Typing Ctrl+C into the terminal will halt the streamed information in the "
"console, but it will not close the emulator. This is so you can test new "
"changes without restarting the emulator."
msgstr ""

msgid ""
"In future, if you want to run on this device without using the menu, you can"
" provide the emulator's name to Briefcase, using `briefcase run android -d "
"\"@beePhone\"` to run on the virtual device directly."
msgstr ""

msgid ""
"Details on how to make these changes can be found [in the Android developer "
"documentation](https://developer.android.com/studio/debug/dev-"
"options#enable)."
msgstr ""

msgid ""
"Here we can see a new physical device with it's serial number on the "
"deployment list - in this case, a Pixel 3a. In the future, if you want to "
"run on this device without using the menu, you can provide the phone's "
"serial number to Briefcase (in this case, `briefcase run android -d "
"94ZZY0LNE8`). This will run on the device directly, without prompting."
msgstr ""

msgid "::: {.admonition} My device doesn't appear!"
msgstr ""

msgid ""
"If your device doesn't appear on this list at all, either you haven't "
"enabled USB debugging, (or the device isn't plugged in!)."
msgstr ""

msgid ""
"If your device appears, but is listed as \"Unknown device (not authorized "
"for development)\", developer mode hasn't been correctly enabled. Re-run "
"[the steps to enable developer "
"options](https://developer.android.com/studio/debug/dev-options#enable), and"
" re-run `briefcase run android`. :::"
msgstr ""

msgid ""
"We've now got an application on our phone! Is there anywhere else we can "
"deploy a BeeWare app? Turn to `Tutorial 6 <../../tutorial-6>`{.interpreted-"
"text role=\"doc\"} to find out..."
msgstr ""

#~ msgid ""
#~ "Now, we\\'re going to take our application, and deploy it as an Android "
#~ "application."
#~ msgstr ""

#~ msgid ""
#~ "When you run `briefcase create android` for the first time, Briefcase "
#~ "downloads a Java JDK, and the Android SDK. File sizes and download times can"
#~ " be considerable; this may take a while (10 minutes or longer, depending on "
#~ "the speed of your Internet connection). When the download has completed, you"
#~ " will be prompted to accept Google\\'s Android SDK license. There\\'s a "
#~ "number of licenses you\\'ll need to agree too - keep entering `y` at the "
#~ "prompt to review and accept each of the necessary the license agreements."
#~ msgstr ""

#~ msgid ""
#~ "Once this completes, we\\'ll have a `build\\helloworld\\android\\gradle` "
#~ "directory in our project, which will contain an Android project with a "
#~ "Gradle build configuration. This project will contain your application code,"
#~ " and a support package containing the Python interpreter."
#~ msgstr ""

#~ msgid ""
#~ "We can then use Briefcase\\'s `build` command to compile this into an "
#~ "Android APK app file."
#~ msgstr ""

#~ msgid ""
#~ "During the `briefcase build android` step, Gradle (the Android platform "
#~ "build tool) will print `CONFIGURING: 100%`, and appear to be doing nothing. "
#~ "Don\\'t worry, it\\'s not stuck - it\\'s downloading more Android SDK "
#~ "components. Depending on your Internet connection speed, this may take "
#~ "another 10 minutes (or longer). This lag should only happen the very first "
#~ "time you run `build`; the tools are cached, and on your next build, the "
#~ "cached versions will be used. :::"
#~ msgstr ""

#~ msgid ""
#~ "We\\'re now ready to run our application. You can use Briefcase\\'s `run` "
#~ "command to run the app on an Android device. Let\\'s start by running on an "
#~ "Android emulator."
#~ msgstr ""

#~ msgid ""
#~ "To run your application, run `briefcase run android`. When you do this, "
#~ "you\\'ll be prompted with a list of devices that you could run the app on. "
#~ "The last item will always be an option to create a new Android emulator."
#~ msgstr ""

#~ msgid ""
#~ "We can now choose our desired device. Select the \\\"Create a new Android "
#~ "emulator\\\" option, and accept the default choice for the device name "
#~ "(`beePhone`)."
#~ msgstr ""

#~ msgid ""
#~ "The app will then start. You\\'ll see a splash screen while the app starts "
#~ "up:"
#~ msgstr ""

#~ msgid "::: {.admonition} The emulator didn\\'t start!"
#~ msgstr ""

#~ msgid ""
#~ "The Android emulator is a complex piece of software that relies on a number "
#~ "of hardware and operating system features - features that may not be "
#~ "available or enabled on older machines. If you experience any difficulties "
#~ "starting the Android emulator, consult the [Requirements and "
#~ "recommendations]{1} section of the Android developer documentation. :::"
#~ msgstr ""

#~ msgid ""
#~ "The first time the app starts, it needs to unpack itself onto the device. "
#~ "This may take a few seconds. Once it\\'s unpacked, you\\'ll see the Android "
#~ "version of our desktop app:"
#~ msgstr ""

#~ msgid ""
#~ "While the app is running, you\\'ll see a lot of messages being streamed in "
#~ "the console. This is a stream of the application\\'s logs from the emulator."
#~ " Typing Ctrl+C into the terminal will halt the streamed information in the "
#~ "console, but it will not close the emulator. This is so you can test new "
#~ "changes without restarting the emulator."
#~ msgstr ""

#~ msgid ""
#~ "In future, if you want to run on this device without using the menu, you can"
#~ " provide the emulator\\'s name to Briefcase, using `briefcase run android -d"
#~ " \"@beePhone\"` to run on the virtual device directly."
#~ msgstr ""

#~ msgid ""
#~ "Details on how to make these changes can be found [in the Android developer "
#~ "documentation]{1}."
#~ msgstr ""

#~ msgid ""
#~ "Here we can see a new physical device with it\\'s serial number on the "
#~ "deployment list - in this case, a Pixel 3a. In the future, if you want to "
#~ "run on this device without using the menu, you can provide the phone\\'s "
#~ "serial number to Briefcase (in this case, `briefcase run android -d "
#~ "94ZZY0LNE8`). This will run on the device directly, without prompting."
#~ msgstr ""

#~ msgid "::: {.admonition} My device doesn\\'t appear!"
#~ msgstr ""

#~ msgid ""
#~ "If your device doesn\\'t appear on this list at all, either you haven\\'t "
#~ "enabled USB debugging, (or the device isn\\'t plugged in!)."
#~ msgstr ""

#~ msgid ""
#~ "If your device appears, but is listed as \\\"Unknown device (not authorized "
#~ "for development)\\\", developer mode hasn\\'t been correctly enabled. Re-run"
#~ " [the steps to enable developer options]{1}, and re-run `briefcase run "
#~ "android`. :::"
#~ msgstr ""

#~ msgid ""
#~ "We\\'ve now got an application on our phone! Is there anywhere else we can "
#~ "deploy a BeeWare app? Turn to `Tutorial 6 <../../tutorial-6>`{.interpreted-"
#~ "text role=\"doc\"} to find out\\..."
#~ msgstr ""
